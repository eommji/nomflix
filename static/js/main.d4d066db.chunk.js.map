{"version":3,"sources":["assets/noPosterSmall.png","assets/imdb_logo.svg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Production/ProductionPresenter.js","Routes/Production/index.js","Routes/Production/ProductionContainer.js","Routes/Country/CountryPresenter.js","Routes/Country/index.js","Routes/Country/CountryContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","spin","keyframes","Loader","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","HomePresenter","nowPlaying","upComing","popular","loading","error","length","map","movie","key","poster_path","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","type","value","onChange","placeholder","SearchContainer","event","preventDefault","searchByTerm","target","a","List","ul","Item","li","ProductionPresenter","result","production_companies","company","index","ProductionContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","CountryPresenter","production_countries","country","origin_country","CountryContainer","Backdrop","bgImage","Content","Cover","img","Data","h3","ItemContainer","Img","Overview","p","Info","Video","iframe","TabContainer","Tabs","Tab","TabLink","Link","current","DetailPresenter","withRouter","backdrop_path","src","runtime","episode_run_time","genres","genre","imdb_id","href","rel","overview","videos","frameBorder","allow","allowFullScreen","active","path","component","Production","Country","propTypes","PropTypes","object","bool","isRequired","string","DetailContainer","Header","header","SLink","exact","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4d066db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/imdb_logo.8ba3391e.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  &:not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  } to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  border: 13px solid rgba(255, 255, 255, 1);\r\n  border-radius: 50%;\r\n  border-top: 13px solid #9b59b6;\r\n  width: 100px;\r\n  height: 100px;\r\n  animation: ${spin} 2s linear infinite;\r\n  opacity: 0.15;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <Loader />\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 50px;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-size: 25px;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  font-size: 12px;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  padding: 3px 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>{rating} / 10</Rating>\r\n      </ImageContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title={\"Now Playing\"}>\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title={\"Upcoming Movie\"}>\r\n            {upComing.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title={\"Popular Movies\"}>\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#c0392b\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n// yarn add axios@0.18.1\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"e624a90d9b743f0265bc277ef28c2eef\",\r\n    language: \"ko-KR\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport default api;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing }\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: `Can't find movie information.`\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, loading, error } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Show | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>TV Show | Nomflix</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title={\"Top Rated shows\"}>\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title={\"Popular Shows\"}>\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title={\"Airing Today\"}>\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#c0392b\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: `Can't find TV information.`\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 100%;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n        placeholder=\"Search Movies or TV Shows\"\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#c0392b\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#7f8c8d\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: `Can't find results.`\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst List = styled.ul`\r\n  padding: 20px;\r\n  width: 260px;\r\n  background-color: #000;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n  & + li {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst ProductionPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <List>\r\n      {result.production_companies &&\r\n        result.production_companies.map((company, index) => (\r\n          <Item key={index}>{company.name}</Item>\r\n        ))}\r\n    </List>\r\n  );\r\n\r\nProductionPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default ProductionPresenter;\r\n","import ProductionContainer from \"./ProductionContainer\";\r\n\r\nexport default ProductionContainer;\r\n","import React from \"react\";\r\nimport ProductionPresenter from \"./ProductionPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: `Can't find anything.` });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return (\r\n      <ProductionPresenter result={result} loading={loading} error={error} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst List = styled.ul`\r\n  padding: 20px;\r\n  width: 260px;\r\n  background-color: #000;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n  & + li {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst CountryPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <List>\r\n      <Item>\r\n        {result.production_countries\r\n          ? result.production_countries.map(country => country.name)\r\n          : result.origin_country}\r\n      </Item>\r\n    </List>\r\n  );\r\n\r\nCountryPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CountryPresenter;\r\n","import CountryContainer from \"./CountryContainer\";\r\n\r\nexport default CountryContainer;\r\n","import React from \"react\";\r\nimport CountryPresenter from \"./CountryPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: `Can't find anything.` });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <CountryPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Route, Link, withRouter } from \"react-router-dom\";\r\nimport Production from \"Routes/Production\";\r\nimport Country from \"Routes/Country\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.img`\r\n  height: 100%;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  &:not(:last-child)::after {\r\n    display: inline-block;\r\n    content: \"\";\r\n    vertical-align: middle;\r\n    margin: 0 10px;\r\n    width: 3px;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  height: 15px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 13px;\r\n  opacity: 0.8;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n  margin-right: 20px;\r\n  height: 233px;\r\n`;\r\n\r\nconst TabContainer = styled.div``;\r\n\r\nconst Tabs = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Tab = styled.li``;\r\n\r\nconst TabLink = styled(Link)`\r\n  display: block;\r\n  width: 130px;\r\n  padding: 13px 0;\r\n  background-color: ${props =>\r\n    props.current ? \"#000\" : \"rgba(20, 20, 20, 0.8)\"};\r\n  color: ${props =>\r\n    props.current ? \"rgba(255, 255, 255, 0.8)\" : \"rgba(255, 255, 255, 0.5)\"};\r\n  text-align: center;\r\n`;\r\n\r\nconst DetailPresenter = withRouter(\r\n  ({ location: { pathname }, result, loading, error, isMovie }) =>\r\n    loading ? (\r\n      <>\r\n        <Helmet>\r\n          <title>Loading | Nomflix</title>\r\n        </Helmet>\r\n        <Loader />\r\n      </>\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>{result.title ? result.title : result.name} | Nomflix</title>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            src={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../assets/noPosterSmall.png\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>{result.title ? result.title : result.name}</Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Item>\r\n                {result.runtime ? result.runtime : result.episode_run_time[0]}\r\n                min\r\n              </Item>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}\r\n              </Item>\r\n              {result.imdb_id && (\r\n                <a\r\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <Img src={require(\"../../assets/imdb_logo.svg\")}></Img>\r\n                </a>\r\n              )}\r\n            </ItemContainer>\r\n            <Overview>\r\n              {result.overview.length > 400\r\n                ? `${result.overview.substring(0, 400)}...`\r\n                : result.overview}\r\n            </Overview>\r\n            <Info>\r\n              {result.videos.results[0] ? (\r\n                <Video\r\n                  src={`https://www.youtube.com/embed/${result.videos.results[0].key}`}\r\n                  frameBorder=\"0\"\r\n                  allow=\"autoplay; encrypted-media\"\r\n                  allowFullScreen\r\n                />\r\n              ) : null}\r\n              <TabContainer>\r\n                <Tabs>\r\n                  <Tab\r\n                    active={\r\n                      pathname ===\r\n                      `/${isMovie ? \"movie\" : \"show\"}/${result.id}/production`\r\n                    }\r\n                  >\r\n                    <TabLink\r\n                      to={`/${isMovie ? \"movie\" : \"show\"}/${\r\n                        result.id\r\n                      }/production`}\r\n                      current={\r\n                        pathname ===\r\n                        `/${isMovie ? \"movie\" : \"show\"}/${result.id}/production`\r\n                      }\r\n                    >\r\n                      Production\r\n                    </TabLink>\r\n                  </Tab>\r\n                  <Tab\r\n                    active={\r\n                      pathname ===\r\n                      `/${isMovie ? \"movie\" : \"show\"}/${result.id}/country`\r\n                    }\r\n                  >\r\n                    <TabLink\r\n                      to={`/${isMovie ? \"movie\" : \"show\"}/${result.id}/country`}\r\n                      current={\r\n                        pathname ===\r\n                        `/${isMovie ? \"movie\" : \"show\"}/${result.id}/country`\r\n                      }\r\n                    >\r\n                      Country\r\n                    </TabLink>\r\n                  </Tab>\r\n                </Tabs>\r\n                <Route\r\n                  path={`/${isMovie ? \"movie\" : \"show\"}/:id/production`}\r\n                  component={Production}\r\n                />\r\n                <Route\r\n                  path={`/${isMovie ? \"movie\" : \"show\"}/:id/country`}\r\n                  component={Country}\r\n                />\r\n              </TabContainer>\r\n            </Info>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: `Can't find anything.` });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <DetailPresenter {...this.state} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: #fff;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  z-index: 10;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#9b59b6\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Home</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"./Header\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  body {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding-top: 50px;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n  body,\r\n  html,\r\n  #root {\r\n    height: 100%;\r\n  }\r\n  `;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}